;;; Highlighting-Configuration -- Summary:
;;; Commentary:
;;; configuration of text-highlighting packages for Emacs
;;; generated by Zach Maas

;;; Code:

;; Make all symbols pretty
(global-prettify-symbols-mode t)
(setq prettify-symbols-unprettify-at-point t)

(use-package pretty-mode
	:straight t
	:config
	(global-pretty-mode t)
	(pretty-deactivate-groups
	 '(:logic :sets))
	(pretty-activate-groups
	 '(:sub-and-superscripts
		 :ordering :ordering-double :ordering-triple
		 :punctuation
		 :greek :arithmetic-nary :equality
		 :arrows :arrows-twoheaded)))

;; Add tree-sitter to improve highlighting performance
(use-package tree-sitter
	:straight 'tree-sitter
	:init
	(use-package tree-sitter-langs
		:straight t)
	:config
	(global-tree-sitter-mode))


;; Show trailing whitespace
(setq-default show-trailing-whitespace t)
;; Modes to hide trailing whitespace
(add-hook 'mu4e-view-mode-hook (lambda () (setq show-trailing-whitespace nil)))
(add-hook 'undo-tree-mode-hook (lambda () (setq show-trailing-whitespace nil)))

;; subtle lines to show our tab level in code
(use-package highlight-indent-guides
	:straight t
	:diminish highlight-indent-guides-mode
	:config
	(setq highlight-indent-guides-method 'character)
	(add-hook 'prog-mode-hook 'highlight-indent-guides-mode))

;; make our delimiters rainbows! much easier to see sexps
(use-package rainbow-delimiters
	:straight t
	:diminish rainbow-delimiters-mode
	:config
	(add-hook 'prog-mode-hook #'rainbow-delimiters-mode)
	(setq rainbow-delimiters-max-face-count 3)
	(set-face-attribute 'rainbow-delimiters-unmatched-face nil
											:foreground 'unspecified
											:inherit 'error))

;; Highlight parentheses when we're hovering
(use-package highlight-parentheses
  :straight t
  :diminish highlight-parentheses-mode
	:config
	(add-hook 'prog-mode-hook #'highlight-parentheses-mode))

;; prettyify fonts
(setq font-lock-maximum-decoration t)

;; Add highlighting for special editor operations
(use-package volatile-highlights
	:straight  t
	:diminish volatile-highlights-mode
	:config
	(add-hook 'after-init-hook #'volatile-highlights-mode)
	(vhl/define-extension 'evil 'evil-paste-after 'evil-paste-before
												'evil-paste-pop 'evil-move)
	(vhl/install-extension 'evil)
	(vhl/define-extension 'undo-tree 'undo-tree-yank 'undo-tree-move)
	(vhl/install-extension 'undo-tree))

;; Highlight specific keywords in prog-modes
(defun ono-add-watchwords ()
  "Highlight FIXME, TODO, and NOCOMMIT in code TODO"
  (font-lock-add-keywords
   nil '(("\\<\\(TODO\\(?:(.*)\\)?:?\\)\\>"  1 'warning prepend)
			 ("\\<\\(FIXME\\(?:(.*)\\)?:?\\)\\>" 1 'error prepend)
			 ("\\<\\(NOCOMMIT\\(?:(.*)\\)?:?\\)\\>"  1 'error prepend))))
(add-hook 'prog-mode-hook #'ono-add-watchwords)

;; highlighting.el ends here
