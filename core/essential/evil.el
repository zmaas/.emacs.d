;;; Evil-Tools -- Summary:
;;; Commentary:
;;; evil and god mode configuration for Emacs
;;; generated by Zach Maas

;;; Code:

;; Configure evil mode and its packages - VIM like performance
(use-package evil
	:ensure t
	:init
	;; anzu tells us how many matches we have in the bar
	(use-package anzu
		:ensure t
		:diminish anzu-mode
		:config
		(global-anzu-mode 1))
	;; compatibility with evil mode for anzu
	(use-package evil-anzu
		:ensure t)
	;; lets use use avy with evil for jumping around easily
	(use-package evil-escape
		:ensure t
		:diminish evil-escape-mode
		:config
		(add-hook 'after-init-hook #'evil-escape-mode)
		(setq-default evil-escape-key-sequence "jk"))
	;; improved code folding - like vim
	(use-package origami
		:ensure t
		:config
		(add-hook 'after-init-hook #'global-origami-mode))
	(use-package evil-snipe
		:ensure t
		:diminish evil-snipe-mode
		:diminish evil-snipe-override-mode
		:diminish evil-snipe-local-mode
		:config
		(evil-snipe-override-mode 1))
	(use-package evil-surround
		:ensure t
		:config
		(global-evil-surround-mode 1))
	(use-package evil-nerd-commenter
		:ensure t
		:config
		(evilnc-default-hotkeys))
	(setq evil-snipe-scope 'visible)
	(use-package evil-exchange
		:ensure t
		:config
		(evil-exchange-install))
	(use-package evil-visualstar
		:ensure t
		:config
		(global-evil-visualstar-mode))
	(use-package evil-numbers
		:ensure t)
	(use-package evil-args
		:ensure t
		:config
		;; bind evil-args text objects
		(define-key evil-inner-text-objects-map "a" 'evil-inner-arg)
		(define-key evil-outer-text-objects-map "a" 'evil-outer-arg)
		;; bind evil-forward/backward-args
		(define-key evil-normal-state-map "L" 'evil-forward-arg)
		(define-key evil-normal-state-map "H" 'evil-backward-arg)
		(define-key evil-motion-state-map "L" 'evil-forward-arg)
		(define-key evil-motion-state-map "H" 'evil-backward-arg)
		;; bind evil-jump-out-args
		(define-key evil-normal-state-map "K" 'evil-jump-out-args))
	(use-package evil-indent-plus
		:ensure t
		:config
		(define-key evil-inner-text-objects-map "i" 'evil-indent-plus-i-indent)
		(define-key evil-outer-text-objects-map "i" 'evil-indent-plus-a-indent)
		(define-key evil-inner-text-objects-map "I" 'evil-indent-plus-i-indent-up)
		(define-key evil-outer-text-objects-map "I" 'evil-indent-plus-a-indent-up)
		(define-key evil-inner-text-objects-map "J" 'evil-indent-plus-i-indent-up-down)
		(define-key evil-outer-text-objects-map "J" 'evil-indent-plus-a-indent-up-down))
	(use-package evil-goggles
		:ensure t
		:config
		(add-hook 'after-init-hook #'evil-goggles-mode))
	:config
	(evil-mode 1))

;; Need to learn how to use this better -- it is really useful.
(use-package evil-iedit-state
	:ensure t
	:ensure iedit
	:config
	(add-hook 'iedit-mode-hook #'evil-iedit-state))

;;; zm-evil.el ends here
