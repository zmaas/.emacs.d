;;; C++-Tools -- Summary:
;;; Commentary:
;;; configuration of C++ editing packages for Emacs
;;; generated by Zach Maas

;;; Code:

;; Semantic -- The core	C++ editing
(use-package semantic
	:ensure t
	:config
	(global-semanticdb-minor-mode t)
	(global-semantic-idle-scheduler-mode t)
	(global-semantic-idle-summary-mode nil)
	(semantic-mode t))

;; Irony -- C++/C	Completion
(use-package irony
	:ensure t
	:diminish irony-mode
	:init
	(use-package company-irony-c-headers
		:ensure t)
	:config
	(add-hook 'c++-mode-hook 'irony-mode)
	(add-hook 'c-mode-hook 'irony-mode)
	(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
	(eval-after-load 'company
		'(add-to-list
			'company-backends '(company-irony-c-headers company-irony))))

;; ggtags -- Project tag navigation
(use-package ggtags
	:ensure t
	:init
	(use-package counsel-gtags
		:ensure t
		:diminish ""
		:config
		(add-hook 'c-mode-hook 'counsel-gtags-mode)
		(add-hook 'c++-mode-hook 'counsel-gtags-mode))
	:diminish ggtags-mode
	:config
	(add-hook 'c-mode-common-hook
						(lambda ()
							(when (derived-mode-p 'c-mode 'c++-mode)
								(ggtags-mode 1)))))

;; Fast	tag-based nav and completion (moo commands)
;; Specifically improves function	arg viewing
(use-package function-args
	:ensure t
	:config
	(fa-config-default))

;; Autoformatter for code style
(use-package clang-format
	:ensure t
	:config
	(setq clang-format-style "google"))

;; Style tips	for	modern c++
(use-package flycheck-clang-tidy
	:ensure t
	:after flycheck
	:config
	'(add-hook 'flycheck-mode-hook #'flycheck-clang-tidy-setup))

;; Better static analysis
(use-package flycheck-clang-analyzer
	:ensure t
	:after flycheck
  :config (flycheck-clang-analyzer-setup))

;; Automated disassembly of compiled files
(use-package disaster
	:ensure t)

;; special per-mode keybindings for C++
(general-define-key
 :states '(normal visual insert emacs)
 :keymaps 'c++-mode-map
 :prefix "SPC"
 :non-normal-prefix "M-SPC"
 "l" '(:ignore t :which-key "layer")
 "ll" '(multi-compile-run :which-key "compile")
 "ld" '(counsel-gtags-find-definition :which-key "def")
 "lD" '(disaster :which-key "disaster")
 "ls" '(counsel-gtags-find-symbol :which-key "symbol")
 "lf" '(clang-format-buffer :which-key "format")
 "lS" '(fa-show :which-key "show details")
 "lj" '(moo-jump-local :which-key "jump!")
 "lc" '(moo-complete :which-key "complete"))

;; c++-tools.el ends here
