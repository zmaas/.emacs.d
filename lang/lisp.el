;;; Lisp-Tools -- Summary:
;;; Commentary:
;; configuration of Lisp editing packages for Emacs
;;; generated by Zach Maas

;;; Code:

;; Common Lisp Configuration

;; Require common lisp
(use-package cl
	:ensure t)

;; LISP Development Setup
;; Uses SLIME configured for sbcl
(use-package slime
	:ensure t
	:init
	:config
	(setq inferior-lisp-program "sbcl")
	(setq slime-contribs '(slime-fancy)))

(defun my/slime-mode-hook ()
  (add-to-list 'company-backends 'company-slime))
(add-hook 'slime-mode-hook 'my/slime-mode-hook)

;; Racket Configuration

;; Setup for racket for SICP
(use-package geiser
	:ensure t
	:config
	(add-hook 'scheme-mode-hook #'geiser-mode))

;; special per-mode keybindings for racket Editing
(general-define-key
 :states '(normal visual insert emacs)
 :keymaps 'geiser-mode-map
 :prefix "SPC"
 :non-normal-prefix "M-SPC"
 "l" '(:ignore t :which-key "layer")
 "lr" '(run-racket :which-key "racket repl")
 "ll" '(geiser-eval-definition :which-key "eval def")
 "lc" '(geiser-eval-buffer :which-key "eval buffer")
 "lj" '(geiser-insert-lambda :which-key "lambda"))

;; Emacs Lisp	Configuration
(use-package ielm)

(use-package eldoc
	:config
	(add-hook 'emacs-lisp-mode-hook 'turn-on-eldoc-mode)
	(add-hook 'lisp-interaction-mode-hook 'turn-on-eldoc-mode)
	(add-hook 'ielm-mode-hook 'turn-on-eldoc-mode))

(use-package srefactor
	:ensure t
	:init
	(use-package srefactor-lisp))

(use-package elisp-slime-nav
	:ensure t
	:config
	(dolist (hook '(emacs-lisp-mode-hook ielm-mode-hook))
		(add-hook hook 'elisp-slime-nav-mode)))

;;; zm-lisp-tools.el ends here
